AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Building Docker Images using AWS CodeBuild with GitHub integration. 
  Resources used: AWS CodeBuild, CloudFormation, AWS ECR, SSM, IAM, GitHub.


Parameters:
  GitHubUrl:
    Type: String
    Description: Url for GitHub repo
    Default: "https://github.com/awsdevops2022/docker.git"

#Need GitHub Personal Access Token. The PAT token must be stored in Parameters store
#to avoid hard-coding of the credentials. This can also be managed by AWS Secrets Manager

  GitHubAccessToken:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of parameter with GitHub access token
    Default: codebuild-github-token
    NoEcho: True


Resources:
  CodeBuildCredentials:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      ServerType: GITHUB
      AuthType: PERSONAL_ACCESS_TOKEN
      Token: !Ref GitHubAccessToken


#CodeBuild service role is must for creating the build project

  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildServiceRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Principal:
              Service: 
                - "codebuild.amazonaws.com"
            Action: 
              - 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: "CodeBuildAccessPolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  -  Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource:  
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/SimpleDockerBaseImageProject-*
              - Action:
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:PutImage'
                  - 'ecr:UploadLayerPart'
                Resource: '*'
                Effect: Allow


#Builds a docker image

  CodeBuildDockerProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: no_artifacts
      BadgeEnabled: true
      #Cache: 
        #ProjectCache
      ConcurrentBuildLimit: 2
      Description: "The project builds docker images"
      #EncryptionKey: String
      Environment: 
          #Certificate: String
          ComputeType: "BUILD_GENERAL1_SMALL"
          Image: "aws/codebuild/standard:4.0"
          PrivilegedMode: true
          #RegistryCredential: 
            #RegistryCredential
          Type: LINUX_CONTAINER
          EnvironmentVariables: 
            - Name: "AWS_DEFAULT_REGION"
              Value: !Sub "${AWS::Region}"
            - Name: "AWS_ACCOUNT_ID"
              Value: !Sub "${AWS::AccountId}"
            - Name: "IMAGE_REPO_NAME"
              Value: "base-images"
            - Name: "IMAGE_TAG"
              Value: "latest"

      #FileSystemLocations: 
        #- ProjectFileSystemLocation
      #LogsConfig: 
        #LogsConfig
      Name: "SimpleDockerBaseImageProject"
      QueuedTimeoutInMinutes: 5
      #SecondaryArtifacts: 
        #- Artifacts
      #SecondarySources: 
        #- Source
      #SecondarySourceVersions: 
        #- ProjectSourceVersion
      ServiceRole: !GetAtt [ CodeBuildServiceRole, Arn ]
      Source: 
        BuildSpec: "BasicTemplates/buildspec.yml"
        #BuildStatusConfig: 
          #BuildStatusConfig
        #GitCloneDepth: Integer
        #GitSubmodulesConfig: 
          #GitSubmodulesConfig
        #InsecureSsl: Boolean
        Location: !Ref GitHubUrl
        ReportBuildStatus: true
        #SourceIdentifier: String
        Type: GITHUB

      SourceVersion: "dev"
      Tags: 
        - 
          Key: Name
          Value: !Sub SimpleDockerBaseImageProject-${AWS::StackName}
      TimeoutInMinutes: 5
      Triggers: 
        BuildType: BUILD
        FilterGroups: 
          - - Type: EVENT
              Pattern: PUSH 
            - Type: HEAD_REF
              Pattern: ^refs/heads/dev$
              ExcludeMatchedPattern: false 
        Webhook: true